{
  "id": 2,
  "title": "Nommer chaque page de l'application React",
  "image": "react.jpg",
  "excerpt": "Apprenez à définir un titre unique pour chaque page de votre application React en utilisant document.title et des pratiques optimales.",
  "content": "<p>Dans une application React, définir un titre unique pour chaque page est essentiel pour améliorer l'expérience utilisateur et le référencement naturel (SEO). Ce guide explique comment nommer chaque page dynamiquement en utilisant <code>document.title</code>.</p><h3>1. Définir le titre dans chaque composant</h3><p>Ajoutez une ligne dans le composant React de chaque page pour mettre à jour le titre du document :</p><pre><code class=\"language-javascript\">document.title = 'Home - SportSee';</code></pre><p>Voici un exemple pour une page d'accueil :</p><pre><code class=\"language-javascript\">const Home = () => {\n  document.title = 'Home - SportSee';\n  return (\n    &lt;div className=\"home\">home&lt;/div&gt;\n  );\n};</code></pre><img src=\"/assets/images/articles/Capture.PNG\" alt=\"Exemple de titre défini dans React\" style=\"display:block; margin:20px auto; max-width:100%; border-radius:8px;\"/><h3>2. Éviter de nommer chaque page manuellement</h3><p>Pour éviter de nommer chaque page individuellement, vous pouvez utiliser une approche centralisée. Cela vous permet de gérer tous les titres dans un seul fichier, simplifiant la maintenance et réduisant les erreurs potentielles.</p><pre><code class=\"language-javascript\">const pageTitles = {\n  home: 'Home - SportSee',\n  about: 'About Us - SportSee',\n  dashboard: 'Dashboard - SportSee'\n};</code></pre><p>Ensuite, importez ces titres dans chaque page et mettez à jour le titre dynamiquement :</p><pre><code class=\"language-javascript\">document.title = pageTitles.home;</code></pre><h3>3. Utiliser un Hook personnalisé</h3><p>Pour simplifier davantage la gestion des titres, vous pouvez créer un Hook personnalisé :</p><pre><code class=\"language-javascript\">import { useEffect } from 'react';\n\nconst useDocumentTitle = (title) => {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n};</code></pre><p>Exemple d'utilisation :</p><pre><code class=\"language-javascript\">const Home = () => {\n  useDocumentTitle('Home - SportSee');\n  return (\n    &lt;div className=\"home\">home&lt;/div&gt;\n  );\n};</code></pre><h3>Conclusion</h3><p>En définissant des titres uniques pour chaque page de votre application React, vous améliorez non seulement l'expérience utilisateur mais aussi le SEO de votre site. Adoptez une approche centralisée ou utilisez des Hooks pour une gestion simplifiée.</p>"
}
