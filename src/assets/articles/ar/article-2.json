{
  "id": 2,
  "title": "تسمية كل صفحة في تطبيق React",
  "image": "react.jpg",
  "excerpt": "تعلم كيفية تعيين عنوان فريد لكل صفحة في تطبيق React الخاص بك باستخدام document.title وأفضل الممارسات.",
  "content": "<p>في تطبيق React، يعد تعيين عنوان فريد لكل صفحة أمرًا ضروريًا لتحسين تجربة المستخدم وتحسين محركات البحث (SEO). يوضح هذا الدليل كيفية تسمية كل صفحة ديناميكيًا باستخدام <code>document.title</code>.</p><h3>1. تعيين العنوان في كل مكون</h3><p>أضف سطرًا في مكون React لكل صفحة لتحديث عنوان المستند:</p><pre><code class=\"language-javascript\">document.title = 'Home - SportSee';</code></pre><p>إليك مثال على صفحة رئيسية:</p><pre><code class=\"language-javascript\">const Home = () => {\n  document.title = 'Home - SportSee';\n  return (\n    &lt;div className=\"home\">home&lt;/div&gt;\n  );\n};</code></pre><img src=\"/assets/images/articles/Capture.PNG\" alt=\"مثال على عنوان تم تعيينه في React\" style=\"display:block; margin:20px auto; max-width:100%; border-radius:8px;\"/><h3>2. تجنب تسمية كل صفحة يدويًا</h3><p>لتجنب تسمية كل صفحة على حدة، يمكنك استخدام نهج مركزي. يتيح لك ذلك إدارة جميع العناوين في ملف واحد، مما يبسط الصيانة ويقلل من الأخطاء المحتملة.</p><pre><code class=\"language-javascript\">const pageTitles = {\n  home: 'Home - SportSee',\n  about: 'About Us - SportSee',\n  dashboard: 'Dashboard - SportSee'\n};</code></pre><p>ثم قم باستيراد هذه العناوين إلى كل صفحة وقم بتحديث العنوان ديناميكيًا:</p><pre><code class=\"language-javascript\">document.title = pageTitles.home;</code></pre><h3>3. استخدام هوك مخصص</h3><p>لتبسيط إدارة العناوين، يمكنك إنشاء هوك مخصص:</p><pre><code class=\"language-javascript\">import { useEffect } from 'react';\n\nconst useDocumentTitle = (title) => {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n};</code></pre><p>مثال على الاستخدام:</p><pre><code class=\"language-javascript\">const Home = () => {\n  useDocumentTitle('Home - SportSee');\n  return (\n    &lt;div className=\"home\">home&lt;/div&gt;\n  );\n};</code></pre><h3>الخاتمة</h3><p>من خلال تحديد عناوين فريدة لكل صفحة في تطبيق React الخاص بك، فإنك لا تحسن تجربة المستخدم فحسب، بل تعزز أيضًا تحسين محركات البحث لموقعك. اتبع نهجًا مركزيًا أو استخدم هوك لتبسيط الإدارة.</p>"
}
